package sample.model;

import org.json.JSONException;
import org.json.JSONObject;

import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;

/**
 * Created by vy on 2/24/17.
 * Modified by Kaan
 */

public class WaterSourceReport extends Report {

    //Not sure if dataTime should be an int


    private WaterType type;
    private WaterCondition condition;
    private static int next_Id = 1;

//    Water source report
//    A user can submit this report any time they are logged in. This report consists of:
//
//    Date and time of report (can be auto generated by application)+
//    Report Number (must be auto generated by application)+
//    Name of reporter (can be auto generated from user information)+
//    Location of water (manually entered. using any kind of
//    location services or gps is extra credit)+
//    Type of water (Bottled, Well, Stream, Lake, Spring, Other)+
//    Condition of water (Waste, Treatable-Clear, Treatable-Muddy, Potable)+


    /**
     * Constructor
     * @param condition condition of the water
     * @param type type of water condition
     * @param reporter who reported this
     * @param reportNumber auto generated report number
     * @param dataTime date it was posted
     */
    private WaterSourceReport(
            Date dataTime, String reportNumber, String reporter,
            WaterType type, WaterCondition condition, Location location) {

        super(dataTime,reportNumber,reporter, location);
        this.condition = condition;
        this.type = type;
    }

    /**
     * Constructor
     * @param reporter who reported this
     */
    public WaterSourceReport(String reporter) {
//
//        mysql> select NOW();
//        +---------------------+
//        | NOW()               |
//        +---------------------+
//        | 2017-03-19 17:45:39 |
//        +---------------------+
//        1 row in set (0.00 sec)



        this(new Date(), Integer.toString(next_Id), reporter, null, null, null);
        next_Id++;
    }




    /**
     * Setter
     * @param dataTime date it was reported
     */

    @Override
    public void setDataTime(Date dataTime) {
        super.dataTime = dataTime;
    }

    /**
     * Getter
     * @return report number
     */
    @Override
    public String getReportNumber() {
        return reportNumber;
    }

    /**
     * Setter
     * @param reportNumber report number of the report
     */
    @Override
    public void setReportNumber(String reportNumber) {

        this.reportNumber = reportNumber;
    }

    /**
     * Setter
     * @param reporter who reported this
     */
    @Override
    public void setReporter(String reporter) {

        this.reporter = reporter;
    }

    /**
     * Getter
     * @return the type of water
     */
    public WaterType getType() {

        return type;
    }

    /**
     * Setter
     * @param type the type of water
     */
    public void setType(WaterType type) {
        this.type = type;
    }

    /**
     * Getter
     * @return the condition of the water
     */
    public WaterCondition getCondition() {
        return condition;
    }




    /**
     * Setter condition
     *
     * @param condition condition of the water
     */
    public void setCondition(WaterCondition condition) {
        this.condition = condition;
    }


    /**
     * attempt to make the report into a json object
     * @return json object representation of the report
     */
    public JSONObject toJSONObject() {
        try {
            JSONObject data = new JSONObject();
            data.put("water_type", this.type.toString());
            data.put("water_condition", this.condition.toString());
            String dataString = data.toString();

            JSONObject locationJson = new JSONObject();
            Location loc = this.getLocation();
            locationJson.put("latitude", loc.getLatitude());
            locationJson.put("longitude", loc.getLongitude());
            String locationJSONstring = locationJson.toString();

            JSONObject returnJson = new JSONObject();
            returnJson.put("date", this.getDateString());
            returnJson.put("report_number", this.reportNumber);
            returnJson.put("reporter", this.reporter);
            returnJson.put("location", locationJSONstring);
            returnJson.put("data", dataString);
            returnJson.put("type", "WaterSourceReport");

            return returnJson;
        } catch (JSONException E){
            return null;
        }

    }


    /**
     * make a water source report from a json object
     * @param jsonObject the water report representation
     * @return an actual water report
     */
    public static WaterSourceReport fromJSONObject(JSONObject jsonObject) {
        WaterSourceReport return_report;
        try {
            String report_number = jsonObject.getString("report_number");
            String dateString = jsonObject.getString("date");
            String reporter = jsonObject.getString("reporter");
            String locationString = jsonObject.getString("location");
            String dataString = jsonObject.getString("data");

            JSONObject dataJSON = new JSONObject(dataString);
            WaterType type = WaterType.valueOf(dataJSON.getString("water_type"));
            WaterCondition waterCondition = WaterCondition.valueOf(dataJSON
                    .getString("water_condition"));

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            Date reportDate = sdf.parse(dateString);

            Location location = new Location("");

            try {
                JSONObject locationJSON = new JSONObject(locationString);
                location.setLatitude(locationJSON.getDouble("latitude"));
                location.setLongitude(locationJSON.getDouble("longitude"));
            } catch (JSONException e) {
                location.setLongitude(0);
                location.setLatitude(0);
            }

            return_report = new WaterSourceReport(reportDate,report_number,reporter,
                    type,waterCondition,location);

        } catch (Exception E) {
            return null;
        }
        return return_report;

    }

    /**
     * formats water report into string method
     * @return String entry for JSON format
     */
    @Override
    public String toString() {
        return "WaterSourceReport{" +
                "dataTime=" + super.getDateString() +
                ", reportNumber=" + reportNumber +
                ", Reporter='" + super.reporter + '\'' +
                ", type=" + type +
                ", condition=" + condition +
                '}';
    }

    /**
     * Gets the string for printing purposes
     * @return String entry for printing
     */
    public String toStringTemp() {
        Location loc = super.getLocation();
        return "Report #" + this.reportNumber +
                ": \n\nDate/Time: " + this.dataTime +
                "\nReporter: " + this.reporter + "\nLocation: " +
                loc.getProvider() + "\nType: " +
                this.type + "\nCondition: " + this.condition + "\n";
    }


}
